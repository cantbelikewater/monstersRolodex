{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","forEach","x","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,kBAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACC,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,YCHQC,EAAW,SAAAR,GAEpB,OADAS,QAAQC,IAAIV,GACL,sBAAKC,UAAU,YAAf,cACHD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAEtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,OAHpB,QCFEQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAd,UAAU,SACVe,KAAK,SACLC,YAAaH,EACbI,SAAUH,MCqCCI,E,kDAxCb,aAAe,IAAD,8BACZ,gBAiBFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAhBrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALH,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACV,SAAUmB,OAEzCrB,QAAQC,IAAIqB,KAAKN,MAAMd,UACvBoB,KAAKN,MAAMd,SAASqB,SAAQ,SAAAC,GAAC,OAAIxB,QAAQC,IAAIuB,Q,+BAOrC,IAAD,EACyBF,KAAKN,MAA9Bd,EADA,EACAA,SAAUW,EADV,EACUA,YACXY,EAAmBvB,EAASwB,QAAO,SAAA/B,GAAO,OAAIA,EAAQE,KAAK8B,cAAcC,SAASf,EAAYc,kBACpG,OACE,sBAAKnC,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEa,YAAc,kBACdC,aAAgBgB,KAAKhB,eAGvB,cAAC,EAAD,CAAUJ,SAAUuB,W,GAlCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f1b9930c.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => (\n    <div className='card-container'>\n     <img alt='mosnter' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} /> \n     <h2> {props.monster.name} </h2>\n     <p> {props.monster.email} </p> \n   </div>\n)","import React from 'react';\nimport './card-list.styles.css';\nimport {Card} from '../card/card.component';\n\nexport const CardList = props => {\n    console.log(props);\n    return <div className='card-list'> {\n        props.monsters.map(monster =>\n          (\n            <Card key={monster.id} monster={monster} /> \n          )\n        )\n      } </div>;\n}","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeHolder, handleChange}) => (\n    <input \n    className='search'\n    type='search'\n    placeholder={placeHolder}\n    onChange={handleChange}\n  /> \n);\n","import './App.css';\nimport React, { Component } from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users=> this.setState({monsters: users}));\n\n    console.log(this.state.monsters);\n    this.state.monsters.forEach(x => console.log(x));\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolodex </h1>\n        <SearchBox \n          placeHolder = 'search monsters'\n          handleChange = {this.handleChange}\n        />\n\n        <CardList monsters={filteredMonsters} > \n        </CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}